var _user$project$Chart$formatDelim = _elm_lang$core$Regex$regex('\\?');
var _user$project$Chart$formatString = F2(
	function (fmt, args) {
		formatString:
		while (true) {
			var _p0 = args;
			if (_p0.ctor === '[]') {
				return fmt;
			} else {
				var _v1 = A4(
					_elm_lang$core$Regex$replace,
					_elm_lang$core$Regex$AtMost(1),
					_user$project$Chart$formatDelim,
					function (_p1) {
						return _elm_lang$core$Basics$toString(_p0._0);
					},
					fmt),
					_v2 = _p0._1;
				fmt = _v1;
				args = _v2;
				continue formatString;
			}
		}
	});
var _user$project$Chart$px = function (x) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_elm_lang$core$Basics$toString(x),
		'px');
};
var _user$project$Chart$path = function (points) {
	var _p2 = points;
	if (_p2.ctor === '::') {
		var d = A2(
			_elm_lang$core$String$join,
			' ',
			A2(
				_elm_lang$core$List_ops['::'],
				A2(
					_elm_lang$core$Basics_ops['++'],
					'M ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p2._0._0),
						A2(
							_elm_lang$core$Basics_ops['++'],
							' ',
							_elm_lang$core$Basics$toString(_p2._0._1)))),
				A2(
					_elm_lang$core$List$map,
					function (_p3) {
						var _p4 = _p3;
						return A2(
							_elm_lang$core$Basics_ops['++'],
							'L ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								_elm_lang$core$Basics$toString(_p4._0),
								A2(
									_elm_lang$core$Basics_ops['++'],
									' ',
									_elm_lang$core$Basics$toString(_p4._1))));
					},
					_p2._1)));
		return A2(
			_elm_lang$svg$Svg$path,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$svg$Svg_Attributes$d(d),
					_elm_lang$svg$Svg_Attributes$fill('none'),
					_elm_lang$svg$Svg_Attributes$stroke('black')
				]),
			_elm_lang$core$Native_List.fromArray(
				[]));
	} else {
		return A2(
			_elm_lang$svg$Svg$text$,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$svg$Svg$text('No Data Available')
				]));
	}
};
var _user$project$Chart$transform = F3(
	function (from, to, x) {
		return (((x - from.min) / from.range) * to.range) + to.min;
	});
var _user$project$Chart$yTick = F2(
	function (f, c) {
		return _elm_lang$core$Native_Utils.update(
			c,
			{yTick: f});
	});
var _user$project$Chart$xTick = F2(
	function (f, c) {
		return _elm_lang$core$Native_Utils.update(
			c,
			{xTick: f});
	});
var _user$project$Chart$height = F2(
	function (h, c) {
		return _elm_lang$core$Native_Utils.update(
			c,
			{height: h});
	});
var _user$project$Chart$width = F2(
	function (w, c) {
		return _elm_lang$core$Native_Utils.update(
			c,
			{width: w});
	});
var _user$project$Chart$y = F2(
	function (f, c) {
		return _elm_lang$core$Native_Utils.update(
			c,
			{y: f});
	});
var _user$project$Chart$x = F2(
	function (f, c) {
		return _elm_lang$core$Native_Utils.update(
			c,
			{x: f});
	});
var _user$project$Chart$defaultChart = {
	x: _elm_lang$core$Basics$always(0),
	y: _elm_lang$core$Basics$always(0),
	yTick: _elm_lang$core$Basics$toString,
	xTick: _elm_lang$core$Basics$toString,
	width: 400,
	height: 300
};
var _user$project$Chart$scale = function (values) {
	var min = A2(
		_elm_lang$core$Maybe$withDefault,
		0,
		_elm_lang$core$List$minimum(values));
	var max = A2(
		_elm_lang$core$Maybe$withDefault,
		min,
		_elm_lang$core$List$maximum(values));
	return {min: min, max: max, range: max - min};
};
var _user$project$Chart$linear = F2(
	function (start, end) {
		return {min: start, max: end, range: end - start};
	});
var _user$project$Chart$xAxis = F2(
	function (chart, scale) {
		var numTicks = _elm_lang$core$Basics$round(chart.width / 50);
		var chartScale = A2(_user$project$Chart$linear, 0, chart.width);
		var tick = function (x) {
			return A2(
				_elm_lang$svg$Svg$g,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$svg$Svg_Attributes$transform(
						A2(
							_user$project$Chart$formatString,
							'translate(? ?)',
							_elm_lang$core$Native_List.fromArray(
								[x, chart.height - 50])))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$svg$Svg$line,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$svg$Svg_Attributes$x1(
								_user$project$Chart$px(0)),
								_elm_lang$svg$Svg_Attributes$x2(
								_user$project$Chart$px(0)),
								_elm_lang$svg$Svg_Attributes$y1(
								_user$project$Chart$px(0)),
								_elm_lang$svg$Svg_Attributes$y2(
								_user$project$Chart$px(10)),
								_elm_lang$svg$Svg_Attributes$stroke('black')
							]),
						_elm_lang$core$Native_List.fromArray(
							[])),
						A2(
						_elm_lang$svg$Svg$g,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$svg$Svg_Attributes$transform(
								A2(
									_user$project$Chart$formatString,
									'translate(? ?)',
									_elm_lang$core$Native_List.fromArray(
										[0, 20])))
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$svg$Svg$text$,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$svg$Svg_Attributes$textAnchor('middle')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$svg$Svg$text(
										chart.xTick(
											A3(_user$project$Chart$transform, chartScale, scale, x)))
									]))
							]))
					]));
		};
		var ticks = A2(
			_elm_lang$core$List$map,
			function (_p5) {
				return tick(
					A2(
						F2(
							function (x, y) {
								return x * y;
							}),
						50,
						_elm_lang$core$Basics$toFloat(_p5)));
			},
			_elm_lang$core$Native_List.range(1, numTicks));
		return A2(
			_elm_lang$svg$Svg$g,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$svg$Svg$line,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$svg$Svg_Attributes$x1(
							_user$project$Chart$px(50)),
							_elm_lang$svg$Svg_Attributes$x2(
							_user$project$Chart$px(chart.width)),
							_elm_lang$svg$Svg_Attributes$y1(
							_user$project$Chart$px(chart.height - 50)),
							_elm_lang$svg$Svg_Attributes$y2(
							_user$project$Chart$px(chart.height - 50)),
							_elm_lang$svg$Svg_Attributes$stroke('black')
						]),
					_elm_lang$core$Native_List.fromArray(
						[])),
					A2(
					_elm_lang$svg$Svg$g,
					_elm_lang$core$Native_List.fromArray(
						[]),
					ticks)
				]));
	});
var _user$project$Chart$yAxis = F2(
	function (chart, scale) {
		var numTicks = _elm_lang$core$Basics$round(chart.height / 50);
		var chartScale = A2(_user$project$Chart$linear, 50, chart.height);
		var tick = function (x) {
			return A2(
				_elm_lang$svg$Svg$g,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$svg$Svg_Attributes$transform(
						A2(
							_user$project$Chart$formatString,
							'translate(? ?)',
							_elm_lang$core$Native_List.fromArray(
								[40, chart.height - x])))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$svg$Svg$line,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$svg$Svg_Attributes$x1(
								_user$project$Chart$px(0)),
								_elm_lang$svg$Svg_Attributes$x2(
								_user$project$Chart$px(10)),
								_elm_lang$svg$Svg_Attributes$y1(
								_user$project$Chart$px(0)),
								_elm_lang$svg$Svg_Attributes$y2(
								_user$project$Chart$px(0)),
								_elm_lang$svg$Svg_Attributes$stroke('black')
							]),
						_elm_lang$core$Native_List.fromArray(
							[])),
						A2(
						_elm_lang$svg$Svg$text$,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$svg$Svg_Attributes$textAnchor('end')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$svg$Svg$text(
								chart.yTick(
									A3(_user$project$Chart$transform, chartScale, scale, x)))
							]))
					]));
		};
		var ticks = A2(
			_elm_lang$core$List$map,
			function (_p6) {
				return tick(
					A2(
						F2(
							function (x, y) {
								return x * y;
							}),
						50,
						_elm_lang$core$Basics$toFloat(_p6)));
			},
			_elm_lang$core$Native_List.range(1, numTicks));
		return A2(
			_elm_lang$svg$Svg$g,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$svg$Svg$line,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$svg$Svg_Attributes$x1(
							_user$project$Chart$px(50)),
							_elm_lang$svg$Svg_Attributes$x2(
							_user$project$Chart$px(50)),
							_elm_lang$svg$Svg_Attributes$y1(
							_user$project$Chart$px(0)),
							_elm_lang$svg$Svg_Attributes$y2(
							_user$project$Chart$px(chart.height - 50)),
							_elm_lang$svg$Svg_Attributes$stroke('black')
						]),
					_elm_lang$core$Native_List.fromArray(
						[])),
					A2(
					_elm_lang$svg$Svg$g,
					_elm_lang$core$Native_List.fromArray(
						[]),
					ticks)
				]));
	});
var _user$project$Chart$line = F2(
	function (options, ds) {
		var zip = _elm_lang$core$List$map2(
			F2(
				function (v0, v1) {
					return {ctor: '_Tuple2', _0: v0, _1: v1};
				}));
		var chart = A3(
			_elm_lang$core$List$foldl,
			F2(
				function (f, x) {
					return f(x);
				}),
			_user$project$Chart$defaultChart,
			options);
		var xs = A2(_elm_lang$core$List$map, chart.x, ds);
		var xScale = _user$project$Chart$scale(xs);
		var ys = A2(_elm_lang$core$List$map, chart.y, ds);
		var yScale = _user$project$Chart$scale(ys);
		var x2s = A2(
			_elm_lang$core$List$map,
			A2(
				_user$project$Chart$transform,
				xScale,
				A2(_user$project$Chart$linear, chart.width, 50)),
			xs);
		var y2s = A2(
			_elm_lang$core$List$map,
			A2(
				_user$project$Chart$transform,
				yScale,
				A2(_user$project$Chart$linear, chart.height - 50, 0)),
			ys);
		var linePath = _user$project$Chart$path(
			A2(zip, x2s, y2s));
		return A2(
			_elm_lang$svg$Svg$svg,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$svg$Svg_Attributes$width(
					_user$project$Chart$px(chart.width)),
					_elm_lang$svg$Svg_Attributes$height(
					_user$project$Chart$px(chart.height))
				]),
			_elm_lang$core$Native_List.fromArray(
				[
					linePath,
					A2(_user$project$Chart$xAxis, chart, xScale),
					A2(_user$project$Chart$yAxis, chart, yScale)
				]));
	});
var _user$project$Chart$Chart = F6(
	function (a, b, c, d, e, f) {
		return {x: a, y: b, xTick: c, yTick: d, width: e, height: f};
	});
var _user$project$Chart$Scale = F3(
	function (a, b, c) {
		return {min: a, max: b, range: c};
	});
