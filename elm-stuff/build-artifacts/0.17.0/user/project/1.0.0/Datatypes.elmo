var _user$project$Datatypes$nextDate = F2(
	function (freq, date) {
		var _p0 = freq;
		if (_p0.ctor === 'Once') {
			return _elm_lang$core$Maybe$Nothing;
		} else {
			return _elm_lang$core$Maybe$Just(
				A3(_rluiten$elm_date_extra$Date_Extra_Duration$add, _p0._1, _p0._0, date));
		}
	});
var _user$project$Datatypes$changesForTransaction = F2(
	function (end, last) {
		if (_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$Date$toTime(last.schedule.first),
			_elm_lang$core$Date$toTime(end)) > 0) {
			return _elm_lang$core$Native_List.fromArray(
				[]);
		} else {
			var next = A2(_user$project$Datatypes$nextDate, last.schedule.freq, last.schedule.first);
			var tail = function () {
				var _p1 = next;
				if (_p1.ctor === 'Nothing') {
					return _elm_lang$core$Native_List.fromArray(
						[]);
				} else {
					var oldSchedule = last.schedule;
					var newSchedule = _elm_lang$core$Native_Utils.update(
						oldSchedule,
						{first: _p1._0});
					return A2(
						_user$project$Datatypes$changesForTransaction,
						end,
						_elm_lang$core$Native_Utils.update(
							last,
							{schedule: newSchedule}));
				}
			}();
			var head = {amount: last.amount, date: last.schedule.first, name: last.name};
			return A2(_elm_lang$core$List_ops['::'], head, tail);
		}
	});
var _user$project$Datatypes$projectTransactions = F2(
	function (end, transactions) {
		var changes = A2(
			_elm_lang$core$List$concatMap,
			_user$project$Datatypes$changesForTransaction(end),
			transactions);
		return A2(
			_elm_lang$core$List$sortBy,
			function (_p2) {
				return _elm_lang$core$Date$toTime(
					function (_) {
						return _.date;
					}(_p2));
			},
			changes);
	});
var _user$project$Datatypes$Model = F2(
	function (a, b) {
		return {accounts: a, now: b};
	});
var _user$project$Datatypes$Account = F3(
	function (a, b, c) {
		return {name: a, balance: b, transactions: c};
	});
var _user$project$Datatypes$Transaction = F3(
	function (a, b, c) {
		return {name: a, amount: b, schedule: c};
	});
var _user$project$Datatypes$Schedule = F2(
	function (a, b) {
		return {freq: a, first: b};
	});
var _user$project$Datatypes$Upcoming = F3(
	function (a, b, c) {
		return {name: a, date: b, amount: c};
	});
var _user$project$Datatypes$Every = F2(
	function (a, b) {
		return {ctor: 'Every', _0: a, _1: b};
	});
var _user$project$Datatypes$state0 = {
	accounts: _elm_lang$core$Native_List.fromArray(
		[
			{
			name: 'Chase',
			balance: 2000,
			transactions: _elm_lang$core$Native_List.fromArray(
				[
					{
					name: 'Rent',
					amount: -2190,
					schedule: {
						freq: A2(_user$project$Datatypes$Every, 1, _rluiten$elm_date_extra$Date_Extra_Duration$Month),
						first: A7(_rluiten$elm_date_extra$Date_Extra_Create$dateFromFields, 2016, _elm_lang$core$Date$May, 1, 12, 0, 0, 0)
					}
				},
					{
					name: 'Car Note',
					amount: -300,
					schedule: {
						freq: A2(_user$project$Datatypes$Every, 1, _rluiten$elm_date_extra$Date_Extra_Duration$Month),
						first: A7(_rluiten$elm_date_extra$Date_Extra_Create$dateFromFields, 2016, _elm_lang$core$Date$May, 23, 12, 0, 0, 0)
					}
				},
					{
					name: 'Car Insurance',
					amount: -150,
					schedule: {
						freq: A2(_user$project$Datatypes$Every, 1, _rluiten$elm_date_extra$Date_Extra_Duration$Month),
						first: A7(_rluiten$elm_date_extra$Date_Extra_Create$dateFromFields, 2016, _elm_lang$core$Date$May, 26, 12, 0, 0, 0)
					}
				},
					{
					name: 'Paycheck',
					amount: 2300,
					schedule: {
						freq: A2(_user$project$Datatypes$Every, 2, _rluiten$elm_date_extra$Date_Extra_Duration$Week),
						first: A7(_rluiten$elm_date_extra$Date_Extra_Create$dateFromFields, 2016, _elm_lang$core$Date$May, 1, 12, 0, 0, 0)
					}
				},
					{
					name: 'Food',
					amount: -105,
					schedule: {
						freq: A2(_user$project$Datatypes$Every, 1, _rluiten$elm_date_extra$Date_Extra_Duration$Week),
						first: A7(_rluiten$elm_date_extra$Date_Extra_Create$dateFromFields, 2016, _elm_lang$core$Date$May, 1, 12, 0, 0, 0)
					}
				}
				])
		}
		]),
	now: _elm_lang$core$Date$fromTime(0)
};
var _user$project$Datatypes$Once = {ctor: 'Once'};
